/*!
* jquery.fancytree.js
* Tree view control with support for lazy loading and much more.
* https://github.com/mar10/fancytree/
*
* Copyright (c) 2008-2017, Martin Wendt (http://wwWendt.de)
* Released under the MIT license
* https://github.com/mar10/fancytree/wiki/LicenseInfo
*
* @version @VERSION
* @date @DATE
*/;(function($,window,document,undefined){"use strict";if($.ui&&$.ui.fancytree){$.ui.fancytree.warn("Fancytree: ignored duplicate include");return;}
var i,attr,FT=null,TEST_IMG=new RegExp(/\.|\//),REX_HTML=/[&<>"'\/]/g,REX_TOOLTIP=/[<>"'\/]/g,RECURSIVE_REQUEST_ERROR="$recursive_request",ENTITY_MAP={"&":"&amp;","<":"&lt;",">":"&gt;","\"":"&quot;","'":"&#39;","/":"&#x2F;"},IGNORE_KEYCODES={16:true,17:true,18:true},SPECIAL_KEYCODES={8:"backspace",9:"tab",10:"return",13:"return",19:"pause",20:"capslock",27:"esc",32:"space",33:"pageup",34:"pagedown",35:"end",36:"home",37:"left",38:"up",39:"right",40:"down",45:"insert",46:"del",59:";",61:"=",96:"0",97:"1",98:"2",99:"3",100:"4",101:"5",102:"6",103:"7",104:"8",105:"9",106:"*",107:"+",109:"-",110:".",111:"/",112:"f1",113:"f2",114:"f3",115:"f4",116:"f5",117:"f6",118:"f7",119:"f8",120:"f9",121:"f10",122:"f11",123:"f12",144:"numlock",145:"scroll",173:"-",186:";",187:"=",188:",",189:"-",190:".",191:"/",192:"`",219:"[",220:"\\",221:"]",222:"'"},MOUSE_BUTTONS={0:"",1:"left",2:"middle",3:"right"},CLASS_ATTRS="active expanded focus folder hideCheckbox lazy selected unselectable".split(" "),CLASS_ATTR_MAP={},NODE_ATTRS="expanded extraClasses folder hideCheckbox icon key lazy refKey selected statusNodeType title tooltip unselectable".split(" "),NODE_ATTR_MAP={},NODE_ATTR_LOWERCASE_MAP={},NONE_NODE_DATA_MAP={"active":true,"children":true,"data":true,"focus":true};for(i=0;i<CLASS_ATTRS.length;i++){CLASS_ATTR_MAP[CLASS_ATTRS[i]]=true;}
for(i=0;i<NODE_ATTRS.length;i++){attr=NODE_ATTRS[i];NODE_ATTR_MAP[attr]=true;if(attr!==attr.toLowerCase()){NODE_ATTR_LOWERCASE_MAP[attr.toLowerCase()]=attr;}}
function _assert(cond,msg){if(!cond){msg=msg?": "+msg:"";$.error("Fancytree assertion failed"+msg);}}
_assert($.ui,"Fancytree requires jQuery UI (http://jqueryui.com)");function consoleApply(method,args){var i,s,fn=window.console?window.console[method]:null;if(fn){try{fn.apply(window.console,args);}catch(e){s="";for(i=0;i<args.length;i++){s+=args[i];}
fn(s);}}}
function _isNode(x){return!!(x.tree&&x.statusNodeType!==undefined);}
function isVersionAtLeast(dottedVersion,major,minor,patch){var i,v,t,verParts=$.map($.trim(dottedVersion).split("."),function(e){return parseInt(e,10);}),testParts=$.map(Array.prototype.slice.call(arguments,1),function(e){return parseInt(e,10);});for(i=0;i<testParts.length;i++){v=verParts[i]||0;t=testParts[i]||0;if(v!==t){return(v>t);}}
return true;}
function _makeVirtualFunction(methodName,tree,base,extension,extName){var proxy=(function(){var prevFunc=tree[methodName],baseFunc=extension[methodName],_local=tree.ext[extName],_super=function(){return prevFunc.apply(tree,arguments);},_superApply=function(args){return prevFunc.apply(tree,args);};return function(){var prevLocal=tree._local,prevSuper=tree._super,prevSuperApply=tree._superApply;try{tree._local=_local;tree._super=_super;tree._superApply=_superApply;return baseFunc.apply(tree,arguments);}finally{tree._local=prevLocal;tree._super=prevSuper;tree._superApply=prevSuperApply;}};})();return proxy;}
function _subclassObject(tree,base,extension,extName){for(var attrName in extension){if(typeof extension[attrName]==="function"){if(typeof tree[attrName]==="function"){tree[attrName]=_makeVirtualFunction(attrName,tree,base,extension,extName);}else if(attrName.charAt(0)==="_"){tree.ext[extName][attrName]=_makeVirtualFunction(attrName,tree,base,extension,extName);}else{$.error("Could not override tree."+attrName+". Use prefix '_' to create tree."+extName+"._"+attrName);}}else{if(attrName!=="options"){tree.ext[extName][attrName]=extension[attrName];}}}}
function _getResolvedPromise(context,argArray){if(context===undefined){return $.Deferred(function(){this.resolve();}).promise();}else{return $.Deferred(function(){this.resolveWith(context,argArray);}).promise();}}
function _getRejectedPromise(context,argArray){if(context===undefined){return $.Deferred(function(){this.reject();}).promise();}else{return $.Deferred(function(){this.rejectWith(context,argArray);}).promise();}}
function _makeResolveFunc(deferred,context){return function(){deferred.resolveWith(context);};}
function _getElementDataAsDict($el){var d=$.extend({},$el.data()),json=d.json;delete d.fancytree;delete d.uiFancytree;if(json){delete d.json;d=$.extend(d,json);}
return d;}
function _escapeHtml(s){return(""+s).replace(REX_HTML,function(s){return ENTITY_MAP[s];});}
function _escapeTooltip(s){return(""+s).replace(REX_TOOLTIP,function(s){return ENTITY_MAP[s];});}
function _makeNodeTitleMatcher(s){s=s.toLowerCase();return function(node){return node.title.toLowerCase().indexOf(s)>=0;};}
function _makeNodeTitleStartMatcher(s){var reMatch=new RegExp("^"+s,"i");return function(node){return reMatch.test(node.title);};}
function FancytreeNode(parent,obj){var i,l,name,cl;this.parent=parent;this.tree=parent.tree;this.ul=null;this.li=null;this.statusNodeType=null;this._isLoading=false;this._error=null;this.data={};for(i=0,l=NODE_ATTRS.length;i<l;i++){name=NODE_ATTRS[i];this[name]=obj[name];}
if(obj.data){$.extend(this.data,obj.data);}
for(name in obj){if(!NODE_ATTR_MAP[name]&&!$.isFunction(obj[name])&&!NONE_NODE_DATA_MAP[name]){this.data[name]=obj[name];}}
if(this.key==null){if(this.tree.options.defaultKey){this.key=this.tree.options.defaultKey(this);_assert(this.key,"defaultKey() must return a unique key");}else{this.key="_"+(FT._nextNodeKey++);}}else{this.key=""+this.key;}
if(obj.active){_assert(this.tree.activeNode===null,"only one active node allowed");this.tree.activeNode=this;}
if(obj.selected){this.tree.lastSelectedNode=this;}
cl=obj.children;if(cl){if(cl.length){this._setChildren(cl);}else{this.children=this.lazy?[]:null;}}else{this.children=null;}
this.tree._callHook("treeRegisterNode",this.tree,true,this);}
FancytreeNode.prototype={_findDirectChild:function(ptr){var i,l,cl=this.children;if(cl){if(typeof ptr==="string"){for(i=0,l=cl.length;i<l;i++){if(cl[i].key===ptr){return cl[i];}}}else if(typeof ptr==="number"){return this.children[ptr];}else if(ptr.parent===this){return ptr;}}
return null;},_setChildren:function(children){_assert(children&&(!this.children||this.children.length===0),"only init supported");this.children=[];for(var i=0,l=children.length;i<l;i++){this.children.push(new FancytreeNode(this,children[i]));}},addChildren:function(children,insertBefore){var i,l,pos,firstNode=null,nodeList=[];if($.isPlainObject(children)){children=[children];}
if(!this.children){this.children=[];}
for(i=0,l=children.length;i<l;i++){nodeList.push(new FancytreeNode(this,children[i]));}
firstNode=nodeList[0];if(insertBefore==null){this.children=this.children.concat(nodeList);}else{insertBefore=this._findDirectChild(insertBefore);pos=$.inArray(insertBefore,this.children);_assert(pos>=0,"insertBefore must be an existing child");this.children.splice.apply(this.children,[pos,0].concat(nodeList));}
if(!this.parent||this.parent.ul||this.tr){this.render();}
if(this.tree.options.selectMode===3){this.fixSelection3FromEndNodes();}
this.triggerModifyChild("add",nodeList.length===1?nodeList[0]:null);return firstNode;},addClass:function(className){return this.toggleClass(className,true);},addNode:function(node,mode){if(mode===undefined||mode==="over"){mode="child";}
switch(mode){case "after":return this.getParent().addChildren(node,this.getNextSibling());case "before":return this.getParent().addChildren(node,this);case "firstChild":var insertBefore=(this.children?this.children[0]:null);return this.addChildren(node,insertBefore);case "child":case "over":return this.addChildren(node);}
_assert(false,"Invalid mode: "+mode);},addPagingNode:function(node,mode){var i,n;mode=mode||"child";if(node===false){for(i=this.children.length-1;i>=0;i--){n=this.children[i];if(n.statusNodeType==="paging"){this.removeChild(n);}}
this.partload=false;return;}
node=$.extend({title:this.tree.options.strings.moreData,statusNodeType:"paging",icon:false},node);this.partload=true;return this.addNode(node,mode);},appendSibling:function(node){return this.addNode(node,"after");},applyPatch:function(patch){if(patch===null){this.remove();return _getResolvedPromise(this);}
var name,promise,v,IGNORE_MAP={children:true,expanded:true,parent:true};for(name in patch){v=patch[name];if(!IGNORE_MAP[name]&&!$.isFunction(v)){if(NODE_ATTR_MAP[name]){this[name]=v;}else{this.data[name]=v;}}}
if(patch.hasOwnProperty("children")){this.removeChildren();if(patch.children){this._setChildren(patch.children);}}
if(this.isVisible()){this.renderTitle();this.renderStatus();}
if(patch.hasOwnProperty("expanded")){promise=this.setExpanded(patch.expanded);}else{promise=_getResolvedPromise(this);}
return promise;},collapseSiblings:function(){return this.tree._callHook("nodeCollapseSiblings",this);},copyTo:function(node,mode,map){return node.addNode(this.toDict(true,map),mode);},countChildren:function(deep){var cl=this.children,i,l,n;if(!cl){return 0;}
n=cl.length;if(deep!==false){for(i=0,l=n;i<l;i++){n+=cl[i].countChildren();}}
return n;},debug:function(msg){if(this.tree.options.debugLevel>=2){Array.prototype.unshift.call(arguments,this.toString());consoleApply("log",arguments);}},discard:function(){this.warn("FancytreeNode.discard() is deprecated since 2014-02-16. Use .resetLazy() instead.");return this.resetLazy();},discardMarkup:function(includeSelf){var fn=includeSelf?"nodeRemoveMarkup":"nodeRemoveChildMarkup";this.tree._callHook(fn,this);},findAll:function(match){match=$.isFunction(match)?match:_makeNodeTitleMatcher(match);var res=[];this.visit(function(n){if(match(n)){res.push(n);}});return res;},findFirst:function(match){match=$.isFunction(match)?match:_makeNodeTitleMatcher(match);var res=null;this.visit(function(n){if(match(n)){res=n;return false;}});return res;},_changeSelectStatusAttrs:function(state){var changed=false;switch(state){case false:changed=(this.selected||this.partsel);this.selected=false;this.partsel=false;break;case true:changed=(!this.selected||!this.partsel);this.selected=true;this.partsel=true;break;case undefined:changed=(this.selected||!this.partsel);this.selected=false;this.partsel=true;break;default:_assert(false,"invalid state: "+state);}
if(changed){this.renderStatus();}
return changed;},fixSelection3AfterClick:function(){var flag=this.isSelected();this.visit(function(node){node._changeSelectStatusAttrs(flag);});this.fixSelection3FromEndNodes();},fixSelection3FromEndNodes:function(){_assert(this.tree.options.selectMode===3,"expected selectMode 3");function _walk(node){var i,l,child,s,state,allSelected,someSelected,children=node.children;if(children&&children.length){allSelected=true;someSelected=false;for(i=0,l=children.length;i<l;i++){child=children[i];s=_walk(child);if(s!==false){someSelected=true;}
if(s!==true){allSelected=false;}}
state=allSelected?true:(someSelected?undefined:false);}else{state=!!node.selected;}
node._changeSelectStatusAttrs(state);return state;}
_walk(this);this.visitParents(function(node){var i,l,child,state,children=node.children,allSelected=true,someSelected=false;for(i=0,l=children.length;i<l;i++){child=children[i];if(child.selected||child.partsel){someSelected=true;}
if(!child.unselectable&&!child.selected){allSelected=false;}}
state=allSelected?true:(someSelected?undefined:false);node._changeSelectStatusAttrs(state);});},fromDict:function(dict){for(var name in dict){if(NODE_ATTR_MAP[name]){this[name]=dict[name];}else if(name==="data"){$.extend(this.data,dict.data);}else if(!$.isFunction(dict[name])&&!NONE_NODE_DATA_MAP[name]){this.data[name]=dict[name];}}
if(dict.children){this.removeChildren();this.addChildren(dict.children);}
this.renderTitle();},getChildren:function(){if(this.hasChildren()===undefined){return undefined;}
return this.children;},getFirstChild:function(){return this.children?this.children[0]:null;},getIndex:function(){return $.inArray(this,this.parent.children);},getIndexHier:function(separator,digits){separator=separator||".";var s,res=[];$.each(this.getParentList(false,true),function(i,o){s=""+(o.getIndex()+1);if(digits){s=("0000000"+s).substr(-digits);}
res.push(s);});return res.join(separator);},getKeyPath:function(excludeSelf){var path=[],sep=this.tree.options.keyPathSeparator;this.visitParents(function(n){if(n.parent){path.unshift(n.key);}},!excludeSelf);return sep+path.join(sep);},getLastChild:function(){return this.children?this.children[this.children.length-1]:null;},getLevel:function(){var level=0,dtn=this.parent;while(dtn){level++;dtn=dtn.parent;}
return level;},getNextSibling:function(){if(this.parent){var i,l,ac=this.parent.children;for(i=0,l=ac.length-1;i<l;i++){if(ac[i]===this){return ac[i+1];}}}
return null;},getParent:function(){return this.parent;},getParentList:function(includeRoot,includeSelf){var l=[],dtn=includeSelf?this:this.parent;while(dtn){if(includeRoot||dtn.parent){l.unshift(dtn);}
dtn=dtn.parent;}
return l;},getPrevSibling:function(){if(this.parent){var i,l,ac=this.parent.children;for(i=1,l=ac.length;i<l;i++){if(ac[i]===this){return ac[i-1];}}}
return null;},getSelectedNodes:function(stopOnParents){var nodeList=[];this.visit(function(node){if(node.selected){nodeList.push(node);if(stopOnParents===true){return "skip";}}});return nodeList;},hasChildren:function(){if(this.lazy){if(this.children==null){return undefined;}else if(this.children.length===0){return false;}else if(this.children.length===1&&this.children[0].isStatusNode()){return undefined;}
return true;}
return!!(this.children&&this.children.length);},hasFocus:function(){return(this.tree.hasFocus()&&this.tree.focusNode===this);},info:function(msg){if(this.tree.options.debugLevel>=1){Array.prototype.unshift.call(arguments,this.toString());consoleApply("info",arguments);}},isActive:function(){return(this.tree.activeNode===this);},isChildOf:function(otherNode){return(this.parent&&this.parent===otherNode);},isDescendantOf:function(otherNode){if(!otherNode||otherNode.tree!==this.tree){return false;}
var p=this.parent;while(p){if(p===otherNode){return true;}
p=p.parent;}
return false;},isExpanded:function(){return!!this.expanded;},isFirstSibling:function(){var p=this.parent;return!p||p.children[0]===this;},isFolder:function(){return!!this.folder;},isLastSibling:function(){var p=this.parent;return!p||p.children[p.children.length-1]===this;},isLazy:function(){return!!this.lazy;},isLoaded:function(){return!this.lazy||this.hasChildren()!==undefined;},isLoading:function(){return!!this._isLoading;},isRoot:function(){return this.isRootNode();},isPartload:function(){return!!this.partload;},isRootNode:function(){return(this.tree.rootNode===this);},isSelected:function(){return!!this.selected;},isStatusNode:function(){return!!this.statusNodeType;},isPagingNode:function(){return this.statusNodeType==="paging";},isTopLevel:function(){return(this.tree.rootNode===this.parent);},isUndefined:function(){return this.hasChildren()===undefined;},isVisible:function(){var i,l,parents=this.getParentList(false,false);for(i=0,l=parents.length;i<l;i++){if(!parents[i].expanded){return false;}}
return true;},lazyLoad:function(discard){this.warn("FancytreeNode.lazyLoad() is deprecated since 2014-02-16. Use .load() instead.");return this.load(discard);},load:function(forceReload){var res,source,that=this,wasExpanded=this.isExpanded();_assert(this.isLazy(),"load() requires a lazy node");if(!forceReload&&!this.isUndefined()){return _getResolvedPromise(this);}
if(this.isLoaded()){this.resetLazy();}
source=this.tree._triggerNodeEvent("lazyLoad",this);if(source===false){return _getResolvedPromise(this);}
_assert(typeof source!=="boolean","lazyLoad event must return source in data.result");res=this.tree._callHook("nodeLoadChildren",this,source);if(wasExpanded){this.expanded=true;res.always(function(){that.render();});}else{res.always(function(){that.renderStatus();});}
return res;},makeVisible:function(opts){var i,that=this,deferreds=[],dfd=new $.Deferred(),parents=this.getParentList(false,false),len=parents.length,effects=!(opts&&opts.noAnimation===true),scroll=!(opts&&opts.scrollIntoView===false);for(i=len-1;i>=0;i--){deferreds.push(parents[i].setExpanded(true,opts));}
$.when.apply($,deferreds).done(function(){if(scroll){that.scrollIntoView(effects).done(function(){dfd.resolve();});}else{dfd.resolve();}});return dfd.promise();},moveTo:function(targetNode,mode,map){if(mode===undefined||mode==="over"){mode="child";}else if(mode==="firstChild"){if(targetNode.children&&targetNode.children.length){mode="before";targetNode=targetNode.children[0];}else{mode="child";}}
var pos,prevParent=this.parent,targetParent=(mode==="child")?targetNode:targetNode.parent;if(this===targetNode){return;}else if(!this.parent){$.error("Cannot move system root");}else if(targetParent.isDescendantOf(this)){$.error("Cannot move a node to its own descendant");}
if(targetParent!==prevParent){prevParent.triggerModifyChild("remove",this);}
if(this.parent.children.length===1){if(this.parent===targetParent){return;}
this.parent.children=this.parent.lazy?[]:null;this.parent.expanded=false;}else{pos=$.inArray(this,this.parent.children);_assert(pos>=0,"invalid source parent");this.parent.children.splice(pos,1);}
this.parent=targetParent;if(targetParent.hasChildren()){switch(mode){case "child":targetParent.children.push(this);break;case "before":pos=$.inArray(targetNode,targetParent.children);_assert(pos>=0,"invalid target parent");targetParent.children.splice(pos,0,this);break;case "after":pos=$.inArray(targetNode,targetParent.children);_assert(pos>=0,"invalid target parent");targetParent.children.splice(pos+1,0,this);break;default:$.error("Invalid mode "+mode);}}else{targetParent.children=[this];}
if(map){targetNode.visit(map,true);}
if(targetParent===prevParent){targetParent.triggerModifyChild("move",this);}else{targetParent.triggerModifyChild("add",this);}
if(this.tree!==targetNode.tree){this.warn("Cross-tree moveTo is experimantal!");this.visit(function(n){n.tree=targetNode.tree;},true);}
if(!prevParent.isDescendantOf(targetParent)){prevParent.render();}
if(!targetParent.isDescendantOf(prevParent)&&targetParent!==prevParent){targetParent.render();}},navigate:function(where,activate){var i,parents,res,handled=true,KC=$.ui.keyCode,sib=null;function _goto(n){if(n){try{n.makeVisible({scrollIntoView:false});}catch(e){}
if(!$(n.span).is(":visible")){n.debug("Navigate: skipping hidden node");n.navigate(where,activate);return;}
return activate===false?n.setFocus():n.setActive();}}
switch(where){case KC.BACKSPACE:if(this.parent&&this.parent.parent){res=_goto(this.parent);}
break;case KC.HOME:this.tree.visit(function(n){if($(n.span).is(":visible")){res=_goto(n);return false;}});break;case KC.END:this.tree.visit(function(n){if($(n.span).is(":visible")){res=n;}});if(res){res=_goto(res);}
break;case KC.LEFT:if(this.expanded){this.setExpanded(false);res=_goto(this);}else if(this.parent&&this.parent.parent){res=_goto(this.parent);}
break;case KC.RIGHT:if(!this.expanded&&(this.children||this.lazy)){this.setExpanded();res=_goto(this);}else if(this.children&&this.children.length){res=_goto(this.children[0]);}
break;case KC.UP:sib=this.getPrevSibling();while(sib&&!$(sib.span).is(":visible")){sib=sib.getPrevSibling();}
while(sib&&sib.expanded&&sib.children&&sib.children.length){sib=sib.children[sib.children.length-1];}
if(!sib&&this.parent&&this.parent.parent){sib=this.parent;}
res=_goto(sib);break;case KC.DOWN:if(this.expanded&&this.children&&this.children.length){sib=this.children[0];}else{parents=this.getParentList(false,true);for(i=parents.length-1;i>=0;i--){sib=parents[i].getNextSibling();while(sib&&!$(sib.span).is(":visible")){sib=sib.getNextSibling();}
if(sib){break;}}}
res=_goto(sib);break;default:handled=false;}
return res||_getResolvedPromise();},remove:function(){return this.parent.removeChild(this);},removeChild:function(childNode){return this.tree._callHook("nodeRemoveChild",this,childNode);},removeChildren:function(){return this.tree._callHook("nodeRemoveChildren",this);},removeClass:function(className){return this.toggleClass(className,false);},render:function(force,deep){return this.tree._callHook("nodeRender",this,force,deep);},renderTitle:function(){return this.tree._callHook("nodeRenderTitle",this);},renderStatus:function(){return this.tree._callHook("nodeRenderStatus",this);},replaceWith:function(source){var res,parent=this.parent,pos=$.inArray(this,parent.children),that=this;_assert(this.isPagingNode(),"replaceWith() currently requires a paging status node");res=this.tree._callHook("nodeLoadChildren",this,source);res.done(function(data){var children=that.children;for(i=0;i<children.length;i++){children[i].parent=parent;}
parent.children.splice.apply(parent.children,[pos+1,0].concat(children));that.children=null;that.remove();parent.render();}).fail(function(){that.setExpanded();});return res;},resetLazy:function(){this.removeChildren();this.expanded=false;this.lazy=true;this.children=undefined;this.renderStatus();},scheduleAction:function(mode,ms){if(this.tree.timer){clearTimeout(this.tree.timer);}
this.tree.timer=null;var self=this;switch(mode){case "cancel":break;case "expand":this.tree.timer=setTimeout(function(){self.tree.debug("setTimeout: trigger expand");self.setExpanded(true);},ms);break;case "activate":this.tree.timer=setTimeout(function(){self.tree.debug("setTimeout: trigger activate");self.setActive(true);},ms);break;default:$.error("Invalid mode "+mode);}},scrollIntoView:function(effects,options){if(options!==undefined&&_isNode(options)){this.warn("scrollIntoView() with 'topNode' option is deprecated since 2014-05-08. Use 'options.topNode' instead.");options={topNode:options};}
var topNodeY,nodeY,horzScrollbarHeight,containerOffsetTop,opts=$.extend({effects:(effects===true)?{duration:200,queue:false}:effects,scrollOfs:this.tree.options.scrollOfs,scrollParent:this.tree.options.scrollParent||this.tree.$container,topNode:null},options),dfd=new $.Deferred(),that=this,nodeHeight=$(this.span).height(),$container=$(opts.scrollParent),topOfs=opts.scrollOfs.top||0,bottomOfs=opts.scrollOfs.bottom||0,containerHeight=$container.height(),scrollTop=$container.scrollTop(),$animateTarget=$container,isParentWindow=$container[0]===window,topNode=opts.topNode||null,newScrollTop=null;if(!$(this.span).is(":visible")){this.warn("scrollIntoView(): node is invisible.");return _getResolvedPromise();}
if(isParentWindow){nodeY=$(this.span).offset().top;topNodeY=(topNode&&topNode.span)?$(topNode.span).offset().top:0;$animateTarget=$("html,body");}else{_assert($container[0]!==document&&$container[0]!==document.body,"scrollParent should be a simple element or `window`, not document or body.");containerOffsetTop=$container.offset().top,nodeY=$(this.span).offset().top-containerOffsetTop+scrollTop;topNodeY=topNode?$(topNode.span).offset().top-containerOffsetTop+scrollTop:0;horzScrollbarHeight=Math.max(0,($container.innerHeight()-$container[0].clientHeight));containerHeight-=horzScrollbarHeight;}
if(nodeY<(scrollTop+topOfs)){newScrollTop=nodeY-topOfs;}else if((nodeY+nodeHeight)>(scrollTop+containerHeight-bottomOfs)){newScrollTop=nodeY+nodeHeight-containerHeight+bottomOfs;if(topNode){_assert(topNode.isRootNode()||$(topNode.span).is(":visible"),"topNode must be visible");if(topNodeY<newScrollTop){newScrollTop=topNodeY-topOfs;}}}
if(newScrollTop!==null){if(opts.effects){opts.effects.complete=function(){dfd.resolveWith(that);};$animateTarget.stop(true).animate({scrollTop:newScrollTop},opts.effects);}else{$animateTarget[0].scrollTop=newScrollTop;dfd.resolveWith(this);}}else{dfd.resolveWith(this);}
return dfd.promise();},setActive:function(flag,opts){return this.tree._callHook("nodeSetActive",this,flag,opts);},setExpanded:function(flag,opts){return this.tree._callHook("nodeSetExpanded",this,flag,opts);},setFocus:function(flag){return this.tree._callHook("nodeSetFocus",this,flag);},setSelected:function(flag){return this.tree._callHook("nodeSetSelected",this,flag);},setStatus:function(status,message,details){return this.tree._callHook("nodeSetStatus",this,status,message,details);},setTitle:function(title){this.title=title;this.renderTitle();this.triggerModify("rename");},sortChildren:function(cmp,deep){var i,l,cl=this.children;if(!cl){return;}
cmp=cmp||function(a,b){var x=a.title.toLowerCase(),y=b.title.toLowerCase();return x===y?0:x>y?1:-1;};cl.sort(cmp);if(deep){for(i=0,l=cl.length;i<l;i++){if(cl[i].children){cl[i].sortChildren(cmp,"$norender$");}}}
if(deep!=="$norender$"){this.render();}
this.triggerModifyChild("sort");},toDict:function(recursive,callback){var i,l,node,dict={},self=this;$.each(NODE_ATTRS,function(i,a){if(self[a]||self[a]===false){dict[a]=self[a];}});if(!$.isEmptyObject(this.data)){dict.data=$.extend({},this.data);if($.isEmptyObject(dict.data)){delete dict.data;}}
if(callback){callback(dict,self);}
if(recursive){if(this.hasChildren()){dict.children=[];for(i=0,l=this.children.length;i<l;i++){node=this.children[i];if(!node.isStatusNode()){dict.children.push(node.toDict(true,callback));}}}else{}}
return dict;},toggleClass:function(value,flag){var className,hasClass,rnotwhite=(/\S+/g),classNames=value.match(rnotwhite)||[],i=0,wasAdded=false,statusElem=this[this.tree.statusClassPropName],curClasses=(" "+(this.extraClasses||"")+" ");if(statusElem){$(statusElem).toggleClass(value,flag);}
while(className=classNames[i++]){hasClass=curClasses.indexOf(" "+className+" ")>=0;flag=(flag===undefined)?(!hasClass):!!flag;if(flag){if(!hasClass){curClasses+=className+" ";wasAdded=true;}}else{while(curClasses.indexOf(" "+className+" ")>-1){curClasses=curClasses.replace(" "+className+" "," ");}}}
this.extraClasses=$.trim(curClasses);return wasAdded;},toggleExpanded:function(){return this.tree._callHook("nodeToggleExpanded",this);},toggleSelected:function(){return this.tree._callHook("nodeToggleSelected",this);},toString:function(){return "<FancytreeNode(#"+this.key+", '"+this.title+"')>";},triggerModifyChild:function(operation,childNode,extra){var data,modifyChild=this.tree.options.modifyChild;if(modifyChild){if(childNode&&childNode.parent!==this){$.error("childNode "+childNode+" is not a child of "+this);}
data={node:this,tree:this.tree,operation:operation,childNode:childNode||null};if(extra){$.extend(data,extra);}
modifyChild({type:"modifyChild"},data);}},triggerModify:function(operation,extra){this.parent.triggerModifyChild(operation,this,extra);},visit:function(fn,includeSelf){var i,l,res=true,children=this.children;if(includeSelf===true){res=fn(this);if(res===false||res==="skip"){return res;}}
if(children){for(i=0,l=children.length;i<l;i++){res=children[i].visit(fn,true);if(res===false){break;}}}
return res;},visitAndLoad:function(fn,includeSelf,_recursion){var dfd,res,loaders,node=this;if(fn&&includeSelf===true){res=fn(node);if(res===false||res==="skip"){return _recursion?res:_getResolvedPromise();}}
if(!node.children&&!node.lazy){return _getResolvedPromise();}
dfd=new $.Deferred();loaders=[];node.load().done(function(){for(var i=0,l=node.children.length;i<l;i++){res=node.children[i].visitAndLoad(fn,true,true);if(res===false){dfd.reject();break;}else if(res!=="skip"){loaders.push(res);}}
$.when.apply(this,loaders).then(function(){dfd.resolve();});});return dfd.promise();},visitParents:function(fn,includeSelf){if(includeSelf&&fn(this)===false){return false;}
var p=this.parent;while(p){if(fn(p)===false){return false;}
p=p.parent;}
return true;},warn:function(msg){Array.prototype.unshift.call(arguments,this.toString());consoleApply("warn",arguments);}};function Fancytree(widget){this.widget=widget;this.$div=widget.element;this.options=widget.options;if(this.options){if($.isFunction(this.options.lazyload)&&!$.isFunction(this.options.lazyLoad)){this.options.lazyLoad=function(){FT.warn("The 'lazyload' event is deprecated since 2014-02-25. Use 'lazyLoad' (with uppercase L) instead.");return widget.options.lazyload.apply(this,arguments);};}
if($.isFunction(this.options.loaderror)){$.error("The 'loaderror' event was renamed since 2014-07-03. Use 'loadError' (with uppercase E) instead.");}
if(this.options.fx!==undefined){FT.warn("The 'fx' option was replaced by 'toggleEffect' since 2014-11-30.");}
if(this.options.removeNode!==undefined){$.error("The 'removeNode' event was replaced by 'modifyChild' since 2.20 (2016-09-10).");}}
this.ext={};this.data=_getElementDataAsDict(this.$div);this._id=$.ui.fancytree._nextId++;this._ns=".fancytree-"+this._id;this.activeNode=null;this.focusNode=null;this._hasFocus=null;this._enableUpdate=true;this.lastSelectedNode=null;this.systemFocusElement=null;this.lastQuicksearchTerm="";this.lastQuicksearchTime=0;this.statusClassPropName="span";this.ariaPropName="li";this.nodeContainerAttrName="li";this.$div.find(">ul.fancytree-container").remove();var fakeParent={tree:this},$ul;this.rootNode=new FancytreeNode(fakeParent,{title:"root",key:"root_"+this._id,children:null,expanded:true});this.rootNode.parent=null;$ul=$("<ul>",{"class":"ui-fancytree fancytree-container fancytree-plain"}).appendTo(this.$div);this.$container=$ul;this.rootNode.ul=$ul[0];if(this.options.debugLevel==null){this.options.debugLevel=FT.debugLevel;}
this.$container.attr("tabindex",this.options.tabindex);if(this.options.rtl){this.$container.attr("DIR","RTL").addClass("fancytree-rtl");}
if(this.options.aria){this.$container.attr("role","tree");if(this.options.selectMode!==1){this.$container.attr("aria-multiselectable",true);}}}
Fancytree.prototype={_makeHookContext:function(obj,originalEvent,extra){var ctx,tree;if(obj.node!==undefined){if(originalEvent&&obj.originalEvent!==originalEvent){$.error("invalid args");}
ctx=obj;}else if(obj.tree){tree=obj.tree;ctx={node:obj,tree:tree,widget:tree.widget,options:tree.widget.options,originalEvent:originalEvent};}else if(obj.widget){ctx={node:null,tree:obj,widget:obj.widget,options:obj.widget.options,originalEvent:originalEvent};}else{$.error("invalid args");}
if(extra){$.extend(ctx,extra);}
return ctx;},_callHook:function(funcName,contextObject,_extraArgs){var ctx=this._makeHookContext(contextObject),fn=this[funcName],args=Array.prototype.slice.call(arguments,2);if(!$.isFunction(fn)){$.error("_callHook('"+funcName+"') is not a function");}
args.unshift(ctx);return fn.apply(this,args);},_requireExtension:function(name,required,before,message){before=!!before;var thisName=this._local.name,extList=this.options.extensions,isBefore=$.inArray(name,extList)<$.inArray(thisName,extList),isMissing=required&&this.ext[name]==null,badOrder=!isMissing&&before!=null&&(before!==isBefore);_assert(thisName&&thisName!==name,"invalid or same name");if(isMissing||badOrder){if(!message){if(isMissing||required){message="'"+thisName+"' extension requires '"+name+"'";if(badOrder){message+=" to be registered "+(before?"before":"after")+" itself";}}else{message="If used together, `"+name+"` must be registered "+(before?"before":"after")+" `"+thisName+"`";}}
$.error(message);return false;}
return true;},activateKey:function(key){var node=this.getNodeByKey(key);if(node){node.setActive();}else if(this.activeNode){this.activeNode.setActive(false);}
return node;},addPagingNode:function(node,mode){return this.rootNode.addPagingNode(node,mode);},applyPatch:function(patchList){var dfd,i,p2,key,patch,node,patchCount=patchList.length,deferredList=[];for(i=0;i<patchCount;i++){p2=patchList[i];_assert(p2.length===2,"patchList must be an array of length-2-arrays");key=p2[0];patch=p2[1];node=(key===null)?this.rootNode:this.getNodeByKey(key);if(node){dfd=new $.Deferred();deferredList.push(dfd);node.applyPatch(patch).always(_makeResolveFunc(dfd,node));}else{this.warn("could not find node with key '"+key+"'");}}
return $.when.apply($,deferredList).promise();},clear:function(source){this._callHook("treeClear",this);},count:function(){return this.rootNode.countChildren();},debug:function(msg){if(this.options.debugLevel>=2){Array.prototype.unshift.call(arguments,this.toString());consoleApply("log",arguments);}},enableUpdate:function(flag){flag=(flag!==false);if(!!this._enableUpdate===!!flag){return flag;}
this._enableUpdate=flag;if(flag){this.debug("enableUpdate(true): redraw ",this._dirtyRoots);this.render();}else{this.debug("enableUpdate(false)...");}
return!flag;},findAll:function(match){return this.rootNode.findAll(match);},findFirst:function(match){return this.rootNode.findFirst(match);},findNextNode:function(match,startNode,visibleOnly){var stopNode=null,parentChildren=startNode.parent.children,matchingNode=null,walkVisible=function(parent,idx,fn){var i,grandParent,parentChildren=parent.children,siblingCount=parentChildren.length,node=parentChildren[idx];if(node&&fn(node)===false){return false;}
if(node&&node.children&&node.expanded){if(walkVisible(node,0,fn)===false){return false;}}
for(i=idx+1;i<siblingCount;i++){if(walkVisible(parent,i,fn)===false){return false;}}
grandParent=parent.parent;if(grandParent){return walkVisible(grandParent,grandParent.children.indexOf(parent)+1,fn);}else{return walkVisible(parent,0,fn);}};match=(typeof match==="string")?_makeNodeTitleStartMatcher(match):match;startNode=startNode||this.getFirstChild();walkVisible(startNode.parent,parentChildren.indexOf(startNode),function(node){if(node===stopNode){return false;}
stopNode=stopNode||node;if(!$(node.span).is(":visible")){node.debug("quicksearch: skipping hidden node");return;}
if(match(node)){matchingNode=node;if(matchingNode!==startNode){return false;}}});return matchingNode;},generateFormElements:function(selected,active,opts){opts=opts||{};var nodeList,selectedName=(typeof selected==="string")?selected:"ft_"+this._id+"[]",activeName=(typeof active==="string")?active:"ft_"+this._id+"_active",id="fancytree_result_"+this._id,$result=$("#"+id),stopOnParents=this.options.selectMode===3&&opts.stopOnParents!==false;if($result.length){$result.empty();}else{$result=$("<div>",{id:id}).hide().insertAfter(this.$container);}
if(active!==false&&this.activeNode){$result.append($("<input>",{type:"radio",name:activeName,value:this.activeNode.key,checked:true}));}
function _appender(node){$result.append($("<input>",{type:"checkbox",name:selectedName,value:node.key,checked:true}));}
if(opts.filter){this.visit(function(node){var res=opts.filter(node);if(res==="skip"){return res;}
if(res!==false){_appender(node);}});}else if(selected!==false){nodeList=this.getSelectedNodes(stopOnParents);$.each(nodeList,function(idx,node){_appender(node);});}},getActiveNode:function(){return this.activeNode;},getFirstChild:function(){return this.rootNode.getFirstChild();},getFocusNode:function(){return this.focusNode;},getNodeByKey:function(key,searchRoot){var el,match;if(!searchRoot){el=document.getElementById(this.options.idPrefix+key);if(el){return el.ftnode?el.ftnode:null;}}
searchRoot=searchRoot||this.rootNode;match=null;searchRoot.visit(function(node){if(node.key===key){match=node;return false;}},true);return match;},getRootNode:function(){return this.rootNode;},getSelectedNodes:function(stopOnParents){return this.rootNode.getSelectedNodes(stopOnParents);},hasFocus:function(){return!!this._hasFocus;},info:function(msg){if(this.options.debugLevel>=1){Array.prototype.unshift.call(arguments,this.toString());consoleApply("info",arguments);}},loadKeyPath:function(keyPathList,callback,_rootNode){var deferredList,dfd,i,path,key,loadMap,node,root,segList,sep=this.options.keyPathSeparator,self=this;callback=callback||$.noop;if(!$.isArray(keyPathList)){keyPathList=[keyPathList];}
loadMap={};for(i=0;i<keyPathList.length;i++){root=_rootNode||this.rootNode;path=keyPathList[i];if(path.charAt(0)===sep){path=path.substr(1);}
segList=path.split(sep);while(segList.length){key=segList.shift();node=root._findDirectChild(key);if(!node){this.warn("loadKeyPath: key not found: "+key+" (parent: "+root+")");callback.call(this,key,"error");break;}else if(segList.length===0){callback.call(this,node,"ok");break;}else if(!node.lazy||(node.hasChildren()!==undefined)){callback.call(this,node,"loaded");root=node;}else{callback.call(this,node,"loaded");if(loadMap[key]){loadMap[key].push(segList.join(sep));}else{loadMap[key]=[segList.join(sep)];}
break;}}}
deferredList=[];function __lazyload(key,node,dfd){callback.call(self,node,"loading");node.load().done(function(){self.loadKeyPath.call(self,loadMap[key],callback,node).always(_makeResolveFunc(dfd,self));}).fail(function(errMsg){self.warn("loadKeyPath: error loading: "+key+" (parent: "+root+")");callback.call(self,node,"error");dfd.reject();});}
for(key in loadMap){node=root._findDirectChild(key);if(node==null){node=self.getNodeByKey(key);}
dfd=new $.Deferred();deferredList.push(dfd);__lazyload(key,node,dfd);}
return $.when.apply($,deferredList).promise();},reactivate:function(setFocus){var res,node=this.activeNode;if(!node){return _getResolvedPromise();}
this.activeNode=null;res=node.setActive(true,{noFocus:true});if(setFocus){node.setFocus();}
return res;},reload:function(source){this._callHook("treeClear",this);return this._callHook("treeLoad",this,source);},render:function(force,deep){return this.rootNode.render(force,deep);},setFocus:function(flag){return this._callHook("treeSetFocus",this,flag);},toDict:function(includeRoot,callback){var res=this.rootNode.toDict(true,callback);return includeRoot?res:res.children;},toString:function(){return "<Fancytree(#"+this._id+")>";},_triggerNodeEvent:function(type,node,originalEvent,extra){var ctx=this._makeHookContext(node,originalEvent,extra),res=this.widget._trigger(type,originalEvent,ctx);if(res!==false&&ctx.result!==undefined){return ctx.result;}
return res;},_triggerTreeEvent:function(type,originalEvent,extra){var ctx=this._makeHookContext(this,originalEvent,extra),res=this.widget._trigger(type,originalEvent,ctx);if(res!==false&&ctx.result!==undefined){return ctx.result;}
return res;},visit:function(fn){return this.rootNode.visit(fn,false);},warn:function(msg){Array.prototype.unshift.call(arguments,this.toString());consoleApply("warn",arguments);}};$.extend(Fancytree.prototype,{nodeClick:function(ctx){var activate,expand,targetType=ctx.targetType,node=ctx.node;if(targetType==="expander"){if(node.isLoading()){node.debug("Got 2nd click while loading: ignored");return;}
this._callHook("nodeToggleExpanded",ctx);}else if(targetType==="checkbox"){this._callHook("nodeToggleSelected",ctx);if(ctx.options.focusOnSelect){this._callHook("nodeSetFocus",ctx,true);}}else{expand=false;activate=true;if(node.folder){switch(ctx.options.clickFolderMode){case 2:expand=true;activate=false;break;case 3:activate=true;expand=true;break;}}
if(activate){this.nodeSetFocus(ctx);this._callHook("nodeSetActive",ctx,true);}
if(expand){if(!activate){}
this._callHook("nodeToggleExpanded",ctx);}}},nodeCollapseSiblings:function(ctx,callOpts){var ac,i,l,node=ctx.node;if(node.parent){ac=node.parent.children;for(i=0,l=ac.length;i<l;i++){if(ac[i]!==node&&ac[i].expanded){this._callHook("nodeSetExpanded",ac[i],false,callOpts);}}}},nodeDblclick:function(ctx){if(ctx.targetType==="title"&&ctx.options.clickFolderMode===4){this._callHook("nodeToggleExpanded",ctx);}
if(ctx.targetType==="title"){ctx.originalEvent.preventDefault();}},nodeKeydown:function(ctx){var matchNode,stamp,res,focusNode,event=ctx.originalEvent,node=ctx.node,tree=ctx.tree,opts=ctx.options,which=event.which,whichChar=String.fromCharCode(which),clean=!(event.altKey||event.ctrlKey||event.metaKey||event.shiftKey),$target=$(event.target),handled=true,activate=!(event.ctrlKey||!opts.autoActivate);if(!node){focusNode=(this.getActiveNode()||this.getFirstChild());if(focusNode){focusNode.setFocus();node=ctx.node=this.focusNode;node.debug("Keydown force focus on active node");}}
if(opts.quicksearch&&clean&&/\w/.test(whichChar)&&!SPECIAL_KEYCODES[which]&&!$target.is(":input:enabled")){stamp=new Date().getTime();if(stamp-tree.lastQuicksearchTime>500){tree.lastQuicksearchTerm="";}
tree.lastQuicksearchTime=stamp;tree.lastQuicksearchTerm+=whichChar;matchNode=tree.findNextNode(tree.lastQuicksearchTerm,tree.getActiveNode());if(matchNode){matchNode.setActive();}
event.preventDefault();return;}
switch(FT.eventToString(event)){case "+":case "=":tree.nodeSetExpanded(ctx,true);break;case "-":tree.nodeSetExpanded(ctx,false);break;case "space":if(node.isPagingNode()){tree._triggerNodeEvent("clickPaging",ctx,event);}else if(opts.checkbox){tree.nodeToggleSelected(ctx);}else{tree.nodeSetActive(ctx,true);}
break;case "return":tree.nodeSetActive(ctx,true);break;case "home":case "end":case "backspace":case "left":case "right":case "up":case "down":res=node.navigate(event.which,activate,true);break;default:handled=false;}
if(handled){event.preventDefault();}},nodeLoadChildren:function(ctx,source){var ajax,delay,dfd,tree=ctx.tree,node=ctx.node,requestId=new Date().getTime();if($.isFunction(source)){source=source.call(tree,{type:"source"},ctx);_assert(!$.isFunction(source),"source callback must not return another function");}
if(source.url){if(node._requestId){node.warn("Recursive load request #"+requestId+" while #"+node._requestId+" is pending.");}
ajax=$.extend({},ctx.options.ajax,source);node._requestId=requestId;if(ajax.debugDelay){delay=ajax.debugDelay;if($.isArray(delay)){delay=delay[0]+Math.random()*(delay[1]-delay[0]);}
node.warn("nodeLoadChildren waiting debugDelay "+Math.round(delay)+" ms ...");ajax.debugDelay=false;dfd=$.Deferred(function(dfd){setTimeout(function(){$.ajax(ajax).done(function(){dfd.resolveWith(this,arguments);}).fail(function(){dfd.rejectWith(this,arguments);});},delay);});}else{dfd=$.ajax(ajax);}
source=new $.Deferred();dfd.done(function(data,textStatus,jqXHR){var errorObj,res;if((this.dataType==="json"||this.dataType==="jsonp")&&typeof data==="string"){$.error("Ajax request returned a string (did you get the JSON dataType wrong?).");}
if(node._requestId&&node._requestId>requestId){source.rejectWith(this,[RECURSIVE_REQUEST_ERROR]);return;}
if(ctx.options.postProcess){try{res=tree._triggerNodeEvent("postProcess",ctx,ctx.originalEvent,{response:data,error:null,dataType:this.dataType});}catch(e){res={error:e,message:""+e,details:"postProcess failed"};}
if(res.error){errorObj=$.isPlainObject(res.error)?res.error:{message:res.error};errorObj=tree._makeHookContext(node,null,errorObj);source.rejectWith(this,[errorObj]);return;}
data=$.isArray(res)?res:data;}else if(data&&data.hasOwnProperty("d")&&ctx.options.enableAspx){data=(typeof data.d==="string")?$.parseJSON(data.d):data.d;}
source.resolveWith(this,[data]);}).fail(function(jqXHR,textStatus,errorThrown){var errorObj=tree._makeHookContext(node,null,{error:jqXHR,args:Array.prototype.slice.call(arguments),message:errorThrown,details:jqXHR.status+": "+errorThrown});source.rejectWith(this,[errorObj]);});}
if($.isFunction(source.then)&&$.isFunction(source["catch"])){dfd=source;source=new $.Deferred();dfd.then(function(value){source.resolve(value);},function(reason){source.reject(reason);});}
if($.isFunction(source.promise)){tree.nodeSetStatus(ctx,"loading");source.done(function(children){tree.nodeSetStatus(ctx,"ok");node._requestId=null;}).fail(function(error){var ctxErr;if(error===RECURSIVE_REQUEST_ERROR){node.warn("Ignored response for obsolete load request #"+requestId+" (expected #"+node._requestId+")");return;}else if(error.node&&error.error&&error.message){ctxErr=error;}else{ctxErr=tree._makeHookContext(node,null,{error:error,args:Array.prototype.slice.call(arguments),message:error?(error.message||error.toString()):""});if(ctxErr.message==="[object Object]"){ctxErr.message="";}}
node.warn("Load children failed ("+ctxErr.message+")",ctxErr);if(tree._triggerNodeEvent("loadError",ctxErr,null)!==false){tree.nodeSetStatus(ctx,"error",ctxErr.message,ctxErr.details);}});}
return $.when(source).done(function(children){var metaData;if($.isPlainObject(children)){_assert(node.isRootNode(),"source may only be an object for root nodes (expecting an array of child objects otherwise)");_assert($.isArray(children.children),"if an object is passed as source, it must contain a 'children' array (all other properties are added to 'tree.data')");metaData=children;children=children.children;delete metaData.children;$.extend(tree.data,metaData);}
_assert($.isArray(children),"expected array of children");node._setChildren(children);tree._triggerNodeEvent("loadChildren",node);});},nodeLoadKeyPath:function(ctx,keyPathList){},nodeRemoveChild:function(ctx,childNode){var idx,node=ctx.node,subCtx=$.extend({},ctx,{node:childNode}),children=node.children;if(children.length===1){_assert(childNode===children[0],"invalid single child");return this.nodeRemoveChildren(ctx);}
if(this.activeNode&&(childNode===this.activeNode||this.activeNode.isDescendantOf(childNode))){this.activeNode.setActive(false);}
if(this.focusNode&&(childNode===this.focusNode||this.focusNode.isDescendantOf(childNode))){this.focusNode=null;}
this.nodeRemoveMarkup(subCtx);this.nodeRemoveChildren(subCtx);idx=$.inArray(childNode,children);_assert(idx>=0,"invalid child");node.triggerModifyChild("remove",childNode);childNode.visit(function(n){n.parent=null;},true);this._callHook("treeRegisterNode",this,false,childNode);children.splice(idx,1);},nodeRemoveChildMarkup:function(ctx){var node=ctx.node;if(node.ul){if(node.isRootNode()){$(node.ul).empty();}else{$(node.ul).remove();node.ul=null;}
node.visit(function(n){n.li=n.ul=null;});}},nodeRemoveChildren:function(ctx){var subCtx,tree=ctx.tree,node=ctx.node,children=node.children;if(!children){return;}
if(this.activeNode&&this.activeNode.isDescendantOf(node)){this.activeNode.setActive(false);}
if(this.focusNode&&this.focusNode.isDescendantOf(node)){this.focusNode=null;}
this.nodeRemoveChildMarkup(ctx);subCtx=$.extend({},ctx);node.triggerModifyChild("remove",null);node.visit(function(n){n.parent=null;tree._callHook("treeRegisterNode",tree,false,n);});if(node.lazy){node.children=[];}else{node.children=null;}
if(!node.isRootNode()){node.expanded=false;}
this.nodeRenderStatus(ctx);},nodeRemoveMarkup:function(ctx){var node=ctx.node;if(node.li){$(node.li).remove();node.li=null;}
this.nodeRemoveChildMarkup(ctx);},nodeRender:function(ctx,force,deep,collapsed,_recursive){var childLI,childNode1,childNode2,i,l,next,subCtx,node=ctx.node,tree=ctx.tree,opts=ctx.options,aria=opts.aria,firstTime=false,parent=node.parent,isRootNode=!parent,children=node.children,successorLi=null;if(tree._enableUpdate===false){return;}
if(!isRootNode&&!parent.ul){return;}
_assert(isRootNode||parent.ul,"parent UL must exist");if(!isRootNode){if(node.li&&(force||(node.li.parentNode!==node.parent.ul))){if(node.li.parentNode===node.parent.ul){successorLi=node.li.nextSibling;}else{this.debug("Unlinking "+node+" (must be child of "+node.parent+")");}
this.nodeRemoveMarkup(ctx);}
if(!node.li){firstTime=true;node.li=document.createElement("li");node.li.ftnode=node;if(aria){}
if(node.key&&opts.generateIds){node.li.id=opts.idPrefix+node.key;}
node.span=document.createElement("span");node.span.className="fancytree-node";if(aria){$(node.li).attr("aria-labelledby","ftal_"+opts.idPrefix+node.key);}
node.li.appendChild(node.span);this.nodeRenderTitle(ctx);if(opts.createNode){opts.createNode.call(tree,{type:"createNode"},ctx);}}else{this.nodeRenderStatus(ctx);}
if(opts.renderNode){opts.renderNode.call(tree,{type:"renderNode"},ctx);}}
if(children){if(isRootNode||node.expanded||deep===true){if(!node.ul){node.ul=document.createElement("ul");if((collapsed===true&&!_recursive)||!node.expanded){node.ul.style.display="none";}
if(aria){$(node.ul).attr("role","group");}
if(node.li){node.li.appendChild(node.ul);}else{node.tree.$div.append(node.ul);}}
for(i=0,l=children.length;i<l;i++){subCtx=$.extend({},ctx,{node:children[i]});this.nodeRender(subCtx,force,deep,false,true);}
childLI=node.ul.firstChild;while(childLI){childNode2=childLI.ftnode;if(childNode2&&childNode2.parent!==node){node.debug("_fixParent: remove missing "+childNode2,childLI);next=childLI.nextSibling;childLI.parentNode.removeChild(childLI);childLI=next;}else{childLI=childLI.nextSibling;}}
childLI=node.ul.firstChild;for(i=0,l=children.length-1;i<l;i++){childNode1=children[i];childNode2=childLI.ftnode;if(childNode1!==childNode2){node.ul.insertBefore(childNode1.li,childNode2.li);}else{childLI=childLI.nextSibling;}}}}else{if(node.ul){this.warn("remove child markup for "+node);this.nodeRemoveChildMarkup(ctx);}}
if(!isRootNode){if(firstTime){parent.ul.insertBefore(node.li,successorLi);}}},nodeRenderTitle:function(ctx,title){var id,icon,nodeTitle,role,tabindex,tooltip,node=ctx.node,tree=ctx.tree,opts=ctx.options,aria=opts.aria,level=node.getLevel(),ares=[];if(title!==undefined){node.title=title;}
if(!node.span||tree._enableUpdate===false){return;}
if(level<opts.minExpandLevel){if(!node.lazy){node.expanded=true;}
if(level>1){if(aria){ares.push("<span role='button' class='fancytree-expander fancytree-expander-fixed'></span>");}else{ares.push("<span class='fancytree-expander fancytree-expander-fixed''></span>");}}}else{if(aria){ares.push("<span role='button' class='fancytree-expander'></span>");}else{ares.push("<span class='fancytree-expander'></span>");}}
if(opts.checkbox&&node.hideCheckbox!==true&&!node.isStatusNode()){if(aria){ares.push("<span role='checkbox' class='fancytree-checkbox'></span>");}else{ares.push("<span class='fancytree-checkbox'></span>");}}
if(node.data.iconClass!==undefined){if(node.icon){$.error("'iconClass' node option is deprecated since v2.14.0: use 'icon' only instead");}else{node.warn("'iconClass' node option is deprecated since v2.14.0: use 'icon' instead");node.icon=node.data.iconClass;}}
if($.isFunction(opts.icon)){icon=opts.icon.call(tree,{type:"icon"},ctx);if(icon==null){icon=node.icon;}}else{icon=(node.icon!=null)?node.icon:opts.icon;}
if(icon==null){icon=true;}else{if(typeof icon!=="boolean"){icon=""+icon;}}
if(icon!==false){role=aria?" role='img'":"";if(typeof icon==="string"){if(TEST_IMG.test(icon)){icon=(icon.charAt(0)==="/")?icon:((opts.imagePath||"")+icon);ares.push("<img src='"+icon+"' class='fancytree-icon' alt='' />");}else{ares.push("<span "+role+" class='fancytree-custom-icon "+icon+"'></span>");}}else{ares.push("<span "+role+" class='fancytree-icon'></span>");}}
nodeTitle="";if(opts.renderTitle){nodeTitle=opts.renderTitle.call(tree,{type:"renderTitle"},ctx)||"";}
if(!nodeTitle){if(node.tooltip){tooltip=node.tooltip;}else if(opts.tooltip){tooltip=opts.tooltip===true?node.title:opts.tooltip.call(tree,node);}
tooltip=tooltip?" title='"+_escapeTooltip(tooltip)+"'":"";id=aria?" id='ftal_"+opts.idPrefix+node.key+"'":"";role=aria?" role='treeitem'":"";tabindex=opts.titlesTabbable?" tabindex='0'":"";nodeTitle="<span "+role+" class='fancytree-title'"+
id+tooltip+tabindex+">"+
(opts.escapeTitles?_escapeHtml(node.title):node.title)+
"</span>";}
ares.push(nodeTitle);node.span.innerHTML=ares.join("");this.nodeRenderStatus(ctx);if(opts.enhanceTitle){ctx.$title=$(">span.fancytree-title",node.span);nodeTitle=opts.enhanceTitle.call(tree,{type:"enhanceTitle"},ctx)||"";}},nodeRenderStatus:function(ctx){var node=ctx.node,tree=ctx.tree,opts=ctx.options,hasChildren=node.hasChildren(),isLastSib=node.isLastSibling(),aria=opts.aria,$ariaElem=$(node.span).find(".fancytree-title"),cn=opts._classNames,cnList=[],statusElem=node[tree.statusClassPropName];if(!statusElem||tree._enableUpdate===false){return;}
cnList.push(cn.node);if(tree.activeNode===node){cnList.push(cn.active);}
if(tree.focusNode===node){cnList.push(cn.focused);}else if(aria){}
if(node.expanded){cnList.push(cn.expanded);if(aria){$ariaElem.attr("aria-expanded",true);}}else if(aria){if(hasChildren){$ariaElem.attr("aria-expanded",false);}else{$ariaElem.removeAttr("aria-expanded");}}
if(node.folder){cnList.push(cn.folder);}
if(hasChildren!==false){cnList.push(cn.hasChildren);}
if(isLastSib){cnList.push(cn.lastsib);}
if(node.lazy&&node.children==null){cnList.push(cn.lazy);}
if(node.partload){cnList.push(cn.partload);}
if(node.partsel){cnList.push(cn.partsel);}
if(node.unselectable){cnList.push(cn.unselectable);}
if(node._isLoading){cnList.push(cn.loading);}
if(node._error){cnList.push(cn.error);}
if(node.statusNodeType){cnList.push(cn.statusNodePrefix+node.statusNodeType);}
if(node.selected){cnList.push(cn.selected);if(aria){$ariaElem.attr("aria-selected",true);}}else if(aria){$ariaElem.attr("aria-selected",false);}
if(node.extraClasses){cnList.push(node.extraClasses);}
if(hasChildren===false){cnList.push(cn.combinedExpanderPrefix+"n"+
(isLastSib?"l":""));}else{cnList.push(cn.combinedExpanderPrefix+
(node.expanded?"e":"c")+
(node.lazy&&node.children==null?"d":"")+
(isLastSib?"l":""));}
cnList.push(cn.combinedIconPrefix+
(node.expanded?"e":"c")+
(node.folder?"f":""));statusElem.className=cnList.join(" ");if(node.li){node.li.className=isLastSib?cn.lastsib:"";}},nodeSetActive:function(ctx,flag,callOpts){callOpts=callOpts||{};var subCtx,node=ctx.node,tree=ctx.tree,opts=ctx.options,noEvents=(callOpts.noEvents===true),noFocus=(callOpts.noFocus===true),isActive=(node===tree.activeNode);flag=(flag!==false);if(isActive===flag){return _getResolvedPromise(node);}else if(flag&&!noEvents&&this._triggerNodeEvent("beforeActivate",node,ctx.originalEvent)===false){return _getRejectedPromise(node,["rejected"]);}
if(flag){if(tree.activeNode){_assert(tree.activeNode!==node,"node was active (inconsistency)");subCtx=$.extend({},ctx,{node:tree.activeNode});tree.nodeSetActive(subCtx,false);_assert(tree.activeNode===null,"deactivate was out of sync?");}
if(opts.activeVisible){node.makeVisible({scrollIntoView:noFocus&&tree.focusNode==null});}
tree.activeNode=node;tree.nodeRenderStatus(ctx);if(!noFocus){tree.nodeSetFocus(ctx);}
if(!noEvents){tree._triggerNodeEvent("activate",node,ctx.originalEvent);}}else{_assert(tree.activeNode===node,"node was not active (inconsistency)");tree.activeNode=null;this.nodeRenderStatus(ctx);if(!noEvents){ctx.tree._triggerNodeEvent("deactivate",node,ctx.originalEvent);}}
return _getResolvedPromise(node);},nodeSetExpanded:function(ctx,flag,callOpts){callOpts=callOpts||{};var _afterLoad,dfd,i,l,parents,prevAC,node=ctx.node,tree=ctx.tree,opts=ctx.options,noAnimation=(callOpts.noAnimation===true),noEvents=(callOpts.noEvents===true);flag=(flag!==false);if((node.expanded&&flag)||(!node.expanded&&!flag)){return _getResolvedPromise(node);}else if(flag&&!node.lazy&&!node.hasChildren()){return _getResolvedPromise(node);}else if(!flag&&node.getLevel()<opts.minExpandLevel){return _getRejectedPromise(node,["locked"]);}else if(!noEvents&&this._triggerNodeEvent("beforeExpand",node,ctx.originalEvent)===false){return _getRejectedPromise(node,["rejected"]);}
if(!noAnimation&&!node.isVisible()){noAnimation=callOpts.noAnimation=true;}
dfd=new $.Deferred();if(flag&&!node.expanded&&opts.autoCollapse){parents=node.getParentList(false,true);prevAC=opts.autoCollapse;try{opts.autoCollapse=false;for(i=0,l=parents.length;i<l;i++){this._callHook("nodeCollapseSiblings",parents[i],callOpts);}}finally{opts.autoCollapse=prevAC;}}
dfd.done(function(){var lastChild=node.getLastChild();if(flag&&opts.autoScroll&&!noAnimation&&lastChild){lastChild.scrollIntoView(true,{topNode:node}).always(function(){if(!noEvents){ctx.tree._triggerNodeEvent(flag?"expand":"collapse",ctx);}});}else{if(!noEvents){ctx.tree._triggerNodeEvent(flag?"expand":"collapse",ctx);}}});_afterLoad=function(callback){var isVisible,isExpanded,effect=opts.toggleEffect;node.expanded=flag;tree._callHook("nodeRender",ctx,false,false,true);if(node.ul){isVisible=(node.ul.style.display!=="none");isExpanded=!!node.expanded;if(isVisible===isExpanded){node.warn("nodeSetExpanded: UL.style.display already set");}else if(!effect||noAnimation){node.ul.style.display=(node.expanded||!parent)?"":"none";}else{$(node.ul).toggle(effect.effect,effect.options,effect.duration,function(){callback();});return;}}
callback();};if(flag&&node.lazy&&node.hasChildren()===undefined){node.load().done(function(){if(dfd.notifyWith){dfd.notifyWith(node,["loaded"]);}
_afterLoad(function(){dfd.resolveWith(node);});}).fail(function(errMsg){_afterLoad(function(){dfd.rejectWith(node,["load failed ("+errMsg+")"]);});});}else{_afterLoad(function(){dfd.resolveWith(node);});}
return dfd.promise();},nodeSetFocus:function(ctx,flag){var ctx2,tree=ctx.tree,node=ctx.node,opts=tree.options,isInput=ctx.originalEvent?$(ctx.originalEvent.target).is(":input"):false;flag=(flag!==false);if(tree.focusNode){if(tree.focusNode===node&&flag){return;}
ctx2=$.extend({},ctx,{node:tree.focusNode});tree.focusNode=null;this._triggerNodeEvent("blur",ctx2);this._callHook("nodeRenderStatus",ctx2);}
if(flag){if(!this.hasFocus()){node.debug("nodeSetFocus: forcing container focus");this._callHook("treeSetFocus",ctx,true,{calledByNode:true});}
node.makeVisible({scrollIntoView:false});tree.focusNode=node;if(opts.titlesTabbable){if(!isInput){$(node.span).find(".fancytree-title").focus();}}else{if($(document.activeElement).closest(".fancytree-container").length===0){$(tree.$container).focus();}}
if(opts.aria){$(tree.$container).attr("aria-activedescendant","ftal_"+opts.idPrefix+node.key);}
this._triggerNodeEvent("focus",ctx);if(opts.autoScroll){node.scrollIntoView();}
this._callHook("nodeRenderStatus",ctx);}},nodeSetSelected:function(ctx,flag){var node=ctx.node,tree=ctx.tree,opts=ctx.options;flag=(flag!==false);if(node.unselectable){return;}
if((node.selected&&flag)||(!node.selected&&!flag)){return!!node.selected;}else if(this._triggerNodeEvent("beforeSelect",node,ctx.originalEvent)===false){return!!node.selected;}
if(flag&&opts.selectMode===1){if(tree.lastSelectedNode){tree.lastSelectedNode.setSelected(false);}}else if(opts.selectMode===3){node.selected=flag;node.fixSelection3AfterClick();}
node.selected=flag;this.nodeRenderStatus(ctx);tree.lastSelectedNode=flag?node:null;tree._triggerNodeEvent("select",ctx);},nodeSetStatus:function(ctx,status,message,details){var node=ctx.node,tree=ctx.tree;function _clearStatusNode(){var firstChild=(node.children?node.children[0]:null);if(firstChild&&firstChild.isStatusNode()){try{if(node.ul){node.ul.removeChild(firstChild.li);firstChild.li=null;}}catch(e){}
if(node.children.length===1){node.children=[];}else{node.children.shift();}}}
function _setStatusNode(data,type){var firstChild=(node.children?node.children[0]:null);if(firstChild&&firstChild.isStatusNode()){$.extend(firstChild,data);firstChild.statusNodeType=type;tree._callHook("nodeRenderTitle",firstChild);}else{node._setChildren([data]);node.children[0].statusNodeType=type;tree.render();}
return node.children[0];}
switch(status){case "ok":_clearStatusNode();node._isLoading=false;node._error=null;node.renderStatus();break;case "loading":if(!node.parent){_setStatusNode({title:tree.options.strings.loading+(message?" ("+message+")":""),checkbox:false,tooltip:details},status);}
node._isLoading=true;node._error=null;node.renderStatus();break;case "error":_setStatusNode({title:tree.options.strings.loadError+(message?" ("+message+")":""),checkbox:false,tooltip:details},status);node._isLoading=false;node._error={message:message,details:details};node.renderStatus();break;case "nodata":_setStatusNode({title:tree.options.strings.noData,checkbox:false,tooltip:details},status);node._isLoading=false;node._error=null;node.renderStatus();break;default:$.error("invalid node status "+status);}},nodeToggleExpanded:function(ctx){return this.nodeSetExpanded(ctx,!ctx.node.expanded);},nodeToggleSelected:function(ctx){return this.nodeSetSelected(ctx,!ctx.node.selected);},treeClear:function(ctx){var tree=ctx.tree;tree.activeNode=null;tree.focusNode=null;tree.$div.find(">ul.fancytree-container").empty();tree.rootNode.children=null;},treeCreate:function(ctx){},treeDestroy:function(ctx){this.$div.find(">ul.fancytree-container").remove();this.$source&&this.$source.removeClass("ui-helper-hidden");},treeInit:function(ctx){this.treeLoad(ctx);},treeLoad:function(ctx,source){var metaData,type,$ul,tree=ctx.tree,$container=ctx.widget.element,dfd,rootCtx=$.extend({},ctx,{node:this.rootNode});if(tree.rootNode.children){this.treeClear(ctx);}
source=source||this.options.source;if(!source){type=$container.data("type")||"html";switch(type){case "html":$ul=$container.find(">ul:first");$ul.addClass("ui-fancytree-source ui-helper-hidden");source=$.ui.fancytree.parseHtml($ul);this.data=$.extend(this.data,_getElementDataAsDict($ul));break;case "json":source=$.parseJSON($container.text());$container.contents().filter(function(){return(this.nodeType===3);}).remove();if($.isPlainObject(source)){_assert($.isArray(source.children),"if an object is passed as source, it must contain a 'children' array (all other properties are added to 'tree.data')");metaData=source;source=source.children;delete metaData.children;$.extend(tree.data,metaData);}
break;default:$.error("Invalid data-type: "+type);}}else if(typeof source==="string"){$.error("Not implemented");}
dfd=this.nodeLoadChildren(rootCtx,source).done(function(){tree.render();if(ctx.options.selectMode===3){tree.rootNode.fixSelection3FromEndNodes();}
if(tree.activeNode&&tree.options.activeVisible){tree.activeNode.makeVisible();}
tree._triggerTreeEvent("init",null,{status:true});}).fail(function(){tree.render();tree._triggerTreeEvent("init",null,{status:false});});return dfd;},treeRegisterNode:function(ctx,add,node){},treeSetFocus:function(ctx,flag,callOpts){flag=(flag!==false);if(flag!==this.hasFocus()){this._hasFocus=flag;if(!flag&&this.focusNode){this.focusNode.setFocus(false);}else if(flag&&(!callOpts||!callOpts.calledByNode)){$(this.$container).focus();}
this.$container.toggleClass("fancytree-treefocus",flag);this._triggerTreeEvent(flag?"focusTree":"blurTree");if(flag&&!this.activeNode){this.getFirstChild()&&this.getFirstChild().setFocus();}}},treeSetOption:function(ctx,key,value){var tree=ctx.tree,callDefault=true,rerender=false;switch(key){case "aria":case "checkbox":case "icon":case "minExpandLevel":case "tabindex":tree._callHook("treeCreate",tree);rerender=true;break;case "escapeTitles":case "tooltip":rerender=true;break;case "rtl":if(value===false){tree.$container.attr("DIR",null).removeClass("fancytree-rtl");}else{tree.$container.attr("DIR","RTL").addClass("fancytree-rtl");}
rerender=true;break;case "source":callDefault=false;tree._callHook("treeLoad",tree,value);rerender=true;break;}
tree.debug("set option "+key+"="+value+" <"+typeof(value)+">");if(callDefault){if(this.widget._super){this.widget._super.call(this.widget,key,value);}else{$.Widget.prototype._setOption.call(this.widget,key,value);}}
if(rerender){tree.render(true,false);}}});$.widget("ui.fancytree",{options:{activeVisible:true,ajax:{type:"GET",cache:false,dataType:"json"},aria:false,autoActivate:true,autoCollapse:false,autoScroll:false,checkbox:false,clickFolderMode:4,debugLevel:null,disabled:false,enableAspx:true,escapeTitles:false,extensions:[],toggleEffect:{effect:"blind",options:{direction:"vertical",scale:"box"},duration:200},generateIds:false,icon:true,idPrefix:"ft_",focusOnSelect:false,keyboard:true,keyPathSeparator:"/",minExpandLevel:1,quicksearch:false,rtl:false,scrollOfs:{top:0,bottom:0},scrollParent:null,selectMode:2,strings:{loading:"Loading&#8230;",loadError:"Load error!",moreData:"More&#8230;",noData:"No data."},tabindex:"0",titlesTabbable:false,tooltip:false,_classNames:{node:"fancytree-node",folder:"fancytree-folder",combinedExpanderPrefix:"fancytree-exp-",combinedIconPrefix:"fancytree-ico-",hasChildren:"fancytree-has-children",active:"fancytree-active",selected:"fancytree-selected",expanded:"fancytree-expanded",lazy:"fancytree-lazy",focused:"fancytree-focused",partload:"fancytree-partload",partsel:"fancytree-partsel",unselectable:"fancytree-unselectable",lastsib:"fancytree-lastsib",loading:"fancytree-loading",error:"fancytree-error",statusNodePrefix:"fancytree-statusnode-"},lazyLoad:null,postProcess:null},_create:function(){this.tree=new Fancytree(this);this.$source=this.source||this.element.data("type")==="json"?this.element:this.element.find(">ul:first");var extension,extName,i,opts=this.options,extensions=opts.extensions,base=this.tree;for(i=0;i<extensions.length;i++){extName=extensions[i];extension=$.ui.fancytree._extensions[extName];if(!extension){$.error("Could not apply extension '"+extName+"' (it is not registered, did you forget to include it?)");}
this.tree.options[extName]=$.extend(true,{},extension.options,this.tree.options[extName]);_assert(this.tree.ext[extName]===undefined,"Extension name must not exist as Fancytree.ext attribute: '"+extName+"'");this.tree.ext[extName]={};_subclassObject(this.tree,base,extension,extName);base=extension;}
if(opts.icons!==undefined){if(opts.icon!==true){$.error("'icons' tree option is deprecated since v2.14.0: use 'icon' only instead");}else{this.tree.warn("'icons' tree option is deprecated since v2.14.0: use 'icon' instead");opts.icon=opts.icons;}}
if(opts.iconClass!==undefined){if(opts.icon){$.error("'iconClass' tree option is deprecated since v2.14.0: use 'icon' only instead");}else{this.tree.warn("'iconClass' tree option is deprecated since v2.14.0: use 'icon' instead");opts.icon=opts.iconClass;}}
if(opts.tabbable!==undefined){opts.tabindex=opts.tabbable?"0":"-1";this.tree.warn("'tabbable' tree option is deprecated since v2.17.0: use 'tabindex='"+opts.tabindex+"' instead");}
this.tree._callHook("treeCreate",this.tree);},_init:function(){this.tree._callHook("treeInit",this.tree);this._bind();},_setOption:function(key,value){return this.tree._callHook("treeSetOption",this.tree,key,value);},destroy:function(){this._unbind();this.tree._callHook("treeDestroy",this.tree);$.Widget.prototype.destroy.call(this);},_unbind:function(){var ns=this.tree._ns;this.element.unbind(ns);this.tree.$container.unbind(ns);$(document).unbind(ns);},_bind:function(){var that=this,opts=this.options,tree=this.tree,ns=tree._ns;this._unbind();tree.$container.on("focusin"+ns+" focusout"+ns,function(event){var node=FT.getNode(event),flag=(event.type==="focusin");if(node){tree._callHook("nodeSetFocus",tree._makeHookContext(node,event),flag);}else{tree._callHook("treeSetFocus",tree,flag);}}).on("selectstart"+ns,"span.fancytree-title",function(event){event.preventDefault();}).on("keydown"+ns,function(event){if(opts.disabled||opts.keyboard===false){return true;}
var res,node=tree.focusNode,ctx=tree._makeHookContext(node||tree,event),prevPhase=tree.phase;try{tree.phase="userEvent";if(node){res=tree._triggerNodeEvent("keydown",node,event);}else{res=tree._triggerTreeEvent("keydown",event);}
if(res==="preventNav"){res=true;}else if(res!==false){res=tree._callHook("nodeKeydown",ctx);}
return res;}finally{tree.phase=prevPhase;}}).on("click"+ns+" dblclick"+ns,function(event){if(opts.disabled){return true;}
var ctx,et=FT.getEventTarget(event),node=et.node,tree=that.tree,prevPhase=tree.phase;if(!node){return true;}
ctx=tree._makeHookContext(node,event);try{tree.phase="userEvent";switch(event.type){case "click":ctx.targetType=et.type;if(node.isPagingNode()){return tree._triggerNodeEvent("clickPaging",ctx,event)===true;}
return(tree._triggerNodeEvent("click",ctx,event)===false)?false:tree._callHook("nodeClick",ctx);case "dblclick":ctx.targetType=et.type;return(tree._triggerNodeEvent("dblclick",ctx,event)===false)?false:tree._callHook("nodeDblclick",ctx);}}finally{tree.phase=prevPhase;}});},getActiveNode:function(){return this.tree.activeNode;},getNodeByKey:function(key){return this.tree.getNodeByKey(key);},getRootNode:function(){return this.tree.rootNode;},getTree:function(){return this.tree;}});FT=$.ui.fancytree;$.extend($.ui.fancytree,{version:"@VERSION",buildType:"development",debugLevel:2,_nextId:1,_nextNodeKey:1,_extensions:{},_FancytreeClass:Fancytree,_FancytreeNodeClass:FancytreeNode,jquerySupports:{positionMyOfs:isVersionAtLeast($.ui.version,1,9)},assert:function(cond,msg){return _assert(cond,msg);},debounce:function(timeout,fn,invokeAsap,ctx){var timer;if(arguments.length===3&&typeof invokeAsap!=="boolean"){ctx=invokeAsap;invokeAsap=false;}
return function(){var args=arguments;ctx=ctx||this;invokeAsap&&!timer&&fn.apply(ctx,args);clearTimeout(timer);timer=setTimeout(function(){invokeAsap||fn.apply(ctx,args);timer=null;},timeout);};},debug:function(msg){($.ui.fancytree.debugLevel>=2)&&consoleApply("log",arguments);},error:function(msg){consoleApply("error",arguments);},escapeHtml:_escapeHtml,fixPositionOptions:function(opts){if(opts.offset||(""+opts.my+opts.at).indexOf("%")>=0){$.error("expected new position syntax (but '%' is not supported)");}
if(!$.ui.fancytree.jquerySupports.positionMyOfs){var
myParts=/(\w+)([+-]?\d+)?\s+(\w+)([+-]?\d+)?/.exec(opts.my),atParts=/(\w+)([+-]?\d+)?\s+(\w+)([+-]?\d+)?/.exec(opts.at),dx=(myParts[2]?(+myParts[2]):0)+(atParts[2]?(+atParts[2]):0),dy=(myParts[4]?(+myParts[4]):0)+(atParts[4]?(+atParts[4]):0);opts=$.extend({},opts,{my:myParts[1]+" "+myParts[3],at:atParts[1]+" "+atParts[3]});if(dx||dy){opts.offset=""+dx+" "+dy;}}
return opts;},getEventTargetType:function(event){return this.getEventTarget(event).type;},getEventTarget:function(event){var tcn=event&&event.target?event.target.className:"",res={node:this.getNode(event.target),type:undefined};if(/\bfancytree-title\b/.test(tcn)){res.type="title";}else if(/\bfancytree-expander\b/.test(tcn)){res.type=(res.node.hasChildren()===false?"prefix":"expander");}else if(/\bfancytree-checkbox\b/.test(tcn)||/\bfancytree-radio\b/.test(tcn)){res.type="checkbox";}else if(/\bfancytree-icon\b/.test(tcn)){res.type="icon";}else if(/\bfancytree-node\b/.test(tcn)){res.type="title";}else if(event&&event.target&&$(event.target).closest(".fancytree-title").length){res.type="title";}
return res;},getNode:function(el){if(el instanceof FancytreeNode){return el;}else if(el.selector!==undefined){el=el[0];}else if(el.originalEvent!==undefined){el=el.target;}
while(el){if(el.ftnode){return el.ftnode;}
el=el.parentNode;}
return null;},getTree:function(el){var widget;if(el instanceof Fancytree){return el;}
if(el===undefined){el=0;}
if(typeof el==="number"){el=$(".fancytree-container").eq(el);}else if(typeof el==="string"){el=$(el).eq(0);}else if(el.selector!==undefined){el=el.eq(0);}else if(el.originalEvent!==undefined){el=$(el.target);}
el=el.closest(":ui-fancytree");widget=el.data("ui-fancytree")||el.data("fancytree");return widget?widget.tree:null;},eventToString:function(event){var which=event.which,et=event.type,s=[];if(event.altKey){s.push("alt");}
if(event.ctrlKey){s.push("ctrl");}
if(event.metaKey){s.push("meta");}
if(event.shiftKey){s.push("shift");}
if(et==="click"||et==="dblclick"){s.push(MOUSE_BUTTONS[event.button]+et);}else{if(!IGNORE_KEYCODES[which]){s.push(SPECIAL_KEYCODES[which]||String.fromCharCode(which).toLowerCase());}}
return s.join("+");},info:function(msg){($.ui.fancytree.debugLevel>=1)&&consoleApply("info",arguments);},keyEventToString:function(event){this.warn("keyEventToString() is deprecated: use eventToString()");return this.eventToString(event);},overrideMethod:function(instance,methodName,handler){var prevSuper,_super=instance[methodName]||$.noop;instance[methodName]=function(){try{prevSuper=this._super;this._super=_super;return handler.apply(this,arguments);}finally{this._super=prevSuper;}};},parseHtml:function($ul){var classes,className,extraClasses,i,iPos,l,tmp,tmp2,$children=$ul.find(">li"),children=[];$children.each(function(){var allData,lowerCaseAttr,$li=$(this),$liSpan=$li.find(">span:first",this),$liA=$liSpan.length?null:$li.find(">a:first"),d={tooltip:null,data:{}};if($liSpan.length){d.title=$liSpan.html();}else if($liA&&$liA.length){d.title=$liA.html();d.data.href=$liA.attr("href");d.data.target=$liA.attr("target");d.tooltip=$liA.attr("title");}else{d.title=$li.html();iPos=d.title.search(/<ul/i);if(iPos>=0){d.title=d.title.substring(0,iPos);}}
d.title=$.trim(d.title);for(i=0,l=CLASS_ATTRS.length;i<l;i++){d[CLASS_ATTRS[i]]=undefined;}
classes=this.className.split(" ");extraClasses=[];for(i=0,l=classes.length;i<l;i++){className=classes[i];if(CLASS_ATTR_MAP[className]){d[className]=true;}else{extraClasses.push(className);}}
d.extraClasses=extraClasses.join(" ");tmp=$li.attr("title");if(tmp){d.tooltip=tmp;}
tmp=$li.attr("id");if(tmp){d.key=tmp;}
allData=_getElementDataAsDict($li);if(allData&&!$.isEmptyObject(allData)){for(lowerCaseAttr in NODE_ATTR_LOWERCASE_MAP){if(allData.hasOwnProperty(lowerCaseAttr)){allData[NODE_ATTR_LOWERCASE_MAP[lowerCaseAttr]]=allData[lowerCaseAttr];delete allData[lowerCaseAttr];}}
for(i=0,l=NODE_ATTRS.length;i<l;i++){tmp=NODE_ATTRS[i];tmp2=allData[tmp];if(tmp2!=null){delete allData[tmp];d[tmp]=tmp2;}}
$.extend(d.data,allData);}
$ul=$li.find(">ul:first");if($ul.length){d.children=$.ui.fancytree.parseHtml($ul);}else{d.children=d.lazy?undefined:null;}
children.push(d);});return children;},registerExtension:function(definition){_assert(definition.name!=null,"extensions must have a `name` property.");_assert(definition.version!=null,"extensions must have a `version` property.");$.ui.fancytree._extensions[definition.name]=definition;},unescapeHtml:function(s){var e=document.createElement("div");e.innerHTML=s;return e.childNodes.length===0?"":e.childNodes[0].nodeValue;},warn:function(msg){consoleApply("warn",arguments);}});}(jQuery,window,document));